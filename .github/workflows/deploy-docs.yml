name: Deploy to GitHub Pages

on:\n  push:\n    branches: [ main ]\n  workflow_dispatch:\n\npermissions:\n  contents: read\n  pages: write\n  id-token: write\n\nconcurrency:\n  group: \"pages\"\n  cancel-in-progress: false\n\njobs:\n  build:\n    name: Build Documentation\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v4\n\n    - name: Setup Pages\n      uses: actions/configure-pages@v3\n\n    - name: Setup Python\n      uses: actions/setup-python@v4\n      with:\n        python-version: \"3.10\"\n\n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install mkdocs mkdocs-material mkdocs-mermaid2-plugin\n\n    - name: Create documentation structure\n      run: |\n        mkdir -p docs\n        mkdir -p docs/images\n        mkdir -p docs/api\n        \n        # Create main documentation files\n        cat > docs/index.md << 'EOF'\n        # YouTube Video Summarizer Documentation\n        \n        Welcome to the YouTube Video Summarizer documentation!\n        \n        ## Quick Links\n        \n        - [Installation Guide](installation.md)\n        - [API Reference](api/)\n        - [Troubleshooting](troubleshooting.md)\n        - [Contributing](../CONTRIBUTING.md)\n        \n        ## Overview\n        \n        YouTube Video Summarizer is an AI-powered web application that automatically extracts transcripts from YouTube videos and generates comprehensive summaries using Google's Gemini 1.5 Flash model.\n        \n        ## Features\n        \n        - Smart transcript extraction with multiple fallback methods\n        - AI-powered summarization using Google Gemini\n        - Clean web interface built with Streamlit\n        - Cross-platform compatibility\n        - Easy one-click setup\n        \n        ## Architecture\n        \n        ```mermaid\n        graph TB\n            A[User Input] --> B[URL Validation]\n            B --> C[Transcript Extraction]\n            C --> D[YouTube API]\n            D --> E{Success?}\n            E -->|No| F[LangChain Fallback]\n            E -->|Yes| G[AI Processing]\n            F --> G\n            G --> H[Gemini Model]\n            H --> I[Summary Generation]\n            I --> J[Display Results]\n        ```\n        EOF\n        \n        cat > docs/installation.md << 'EOF'\n        # Installation Guide\n        \n        ## Prerequisites\n        \n        - Python 3.8 or higher\n        - Git\n        - Google API key (free)\n        \n        ## Quick Install\n        \n        ### 1. Clone Repository\n        ```bash\n        git clone https://github.com/yourusername/youtube-video-summarizer.git\n        cd youtube-video-summarizer\n        ```\n        \n        ### 2. Setup Environment\n        ```bash\n        # Create virtual environment\n        python -m venv venv\n        source venv/bin/activate  # Linux/Mac\n        venv\\Scripts\\activate     # Windows\n        \n        # Install dependencies\n        pip install -r requirements.txt\n        ```\n        \n        ### 3. Configure API Key\n        1. Get API key from [Google AI Studio](https://aistudio.google.com/app/apikey)\n        2. Create `.env` file:\n        ```bash\n        GOOGLE_API_KEY=\"your_api_key_here\"\n        ```\n        \n        ### 4. Run Application\n        ```bash\n        streamlit run app.py\n        ```\n        \n        ## One-Click Setup\n        \n        - **Windows**: Double-click `setup_and_run.bat`\n        - **Linux/Mac**: Run `bash setup_and_run.sh`\n        EOF\n        \n        cat > docs/troubleshooting.md << 'EOF'\n        # Troubleshooting Guide\n        \n        ## Common Issues\n        \n        ### API Key Problems\n        \n        **Error**: \"GOOGLE_API_KEY not configured\"\n        \n        **Solutions**:\n        1. Ensure `.env` file exists in project root\n        2. Verify API key format (no extra quotes/spaces)\n        3. Get new key from [Google AI Studio](https://aistudio.google.com/app/apikey)\n        \n        ### Transcript Extraction Fails\n        \n        **Error**: \"No transcripts found\"\n        \n        **Solutions**:\n        1. Verify video has captions enabled\n        2. Try different public video\n        3. Use manual transcript input option\n        4. Check for regional restrictions\n        \n        ### Installation Issues\n        \n        **Error**: Package installation failures\n        \n        **Solutions**:\n        ```bash\n        # Update pip\n        pip install --upgrade pip\n        \n        # Clear cache\n        pip cache purge\n        \n        # Reinstall dependencies\n        pip install -r requirements.txt --force-reinstall\n        ```\n        \n        ### Performance Issues\n        \n        **Issue**: Slow processing\n        \n        **Solutions**:\n        1. Check internet connection\n        2. Verify API quota usage\n        3. Try shorter videos first\n        4. Restart application\n        \n        ## Getting Help\n        \n        If you need additional help:\n        \n        1. Check [GitHub Issues](https://github.com/yourusername/youtube-video-summarizer/issues)\n        2. Create new issue with detailed description\n        3. Include error messages and environment details\n        EOF\n        \n        # Create mkdocs.yml\n        cat > mkdocs.yml << 'EOF'\n        site_name: YouTube Video Summarizer\n        site_description: AI-powered YouTube video summarization\n        site_url: https://yourusername.github.io/youtube-video-summarizer/\n        \n        theme:\n          name: material\n          palette:\n            - scheme: default\n              primary: red\n              accent: red\n          features:\n            - navigation.tabs\n            - navigation.sections\n            - navigation.expand\n            - navigation.top\n            - search.highlight\n            - content.code.copy\n        \n        plugins:\n          - search\n          - mermaid2\n        \n        nav:\n          - Home: index.md\n          - Installation: installation.md\n          - Troubleshooting: troubleshooting.md\n          - Contributing: CONTRIBUTING.md\n        \n        markdown_extensions:\n          - admonition\n          - codehilite\n          - pymdownx.superfences:\n              custom_fences:\n                - name: mermaid\n                  class: mermaid\n                  format: !!python/name:mermaid2.fence_mermaid\n        EOF\n\n    - name: Build documentation\n      run: |\n        mkdocs build\n\n    - name: Upload artifact\n      uses: actions/upload-pages-artifact@v2\n      with:\n        path: ./site\n\n  deploy:\n    name: Deploy to Pages\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    needs: build\n    steps:\n    - name: Deploy to GitHub Pages\n      id: deployment\n      uses: actions/deploy-pages@v2