name: Auto-Release

on:\n  push:\n    tags:\n      - 'v*.*.*'\n\njobs:\n  create-release:\n    name: Create Release\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v4\n      with:\n        fetch-depth: 0\n\n    - name: Get latest tag\n      id: latest_tag\n      run: |\n        echo \"tag=${GITHUB_REF#refs/tags/}\" >> $GITHUB_OUTPUT\n        echo \"previous_tag=$(git describe --tags --abbrev=0 HEAD^)\" >> $GITHUB_OUTPUT || echo \"previous_tag=\" >> $GITHUB_OUTPUT\n\n    - name: Generate changelog\n      id: changelog\n      run: |\n        if [ -n \"${{ steps.latest_tag.outputs.previous_tag }}\" ]; then\n          echo \"## Changes since ${{ steps.latest_tag.outputs.previous_tag }}\" > CHANGELOG.md\n          git log --pretty=format:\"- %s (%h)\" ${{ steps.latest_tag.outputs.previous_tag }}..HEAD >> CHANGELOG.md\n        else\n          echo \"## Initial Release\" > CHANGELOG.md\n          git log --pretty=format:\"- %s (%h)\" >> CHANGELOG.md\n        fi\n        \n        # Read changelog content\n        echo \"changelog<<EOF\" >> $GITHUB_OUTPUT\n        cat CHANGELOG.md >> $GITHUB_OUTPUT\n        echo \"EOF\" >> $GITHUB_OUTPUT\n\n    - name: Set up Python\n      uses: actions/setup-python@v4\n      with:\n        python-version: \"3.10\"\n\n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install -r requirements.txt\n\n    - name: Create distribution package\n      run: |\n        # Create a simple distribution\n        mkdir -p dist\n        \n        # Create archive with all necessary files\n        tar -czf dist/youtube-video-summarizer-${{ steps.latest_tag.outputs.tag }}.tar.gz \\\n          --exclude='.git*' \\\n          --exclude='__pycache__*' \\\n          --exclude='*.pyc' \\\n          --exclude='.env' \\\n          --exclude='dist' \\\n          .\n        \n        # Create zip file for Windows users\n        zip -r dist/youtube-video-summarizer-${{ steps.latest_tag.outputs.tag }}.zip . \\\n          -x '.git/*' '__pycache__/*' '*.pyc' '.env' 'dist/*'\n\n    - name: Create Release\n      uses: actions/create-release@v1\n      id: create_release\n      env:\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n      with:\n        tag_name: ${{ steps.latest_tag.outputs.tag }}\n        release_name: Release ${{ steps.latest_tag.outputs.tag }}\n        body: |\n          # YouTube Video Summarizer ${{ steps.latest_tag.outputs.tag }}\n          \n          ## ðŸš€ Installation\n          \n          ### Quick Start\n          1. Download the source code below\n          2. Extract the archive\n          3. Run the setup script:\n             - **Windows**: Double-click `setup_and_run.bat`\n             - **Linux/Mac**: Run `bash setup_and_run.sh`\n          \n          ### Manual Installation\n          ```bash\n          # Clone or extract the source\n          cd youtube-video-summarizer\n          \n          # Install dependencies\n          pip install -r requirements.txt\n          \n          # Configure API key in .env file\n          echo \"GOOGLE_API_KEY=your_key_here\" > .env\n          \n          # Run the application\n          streamlit run app.py\n          ```\n          \n          ## âœ¨ What's New\n          \n          ${{ steps.changelog.outputs.changelog }}\n          \n          ## ðŸ”§ Requirements\n          \n          - Python 3.8 or higher\n          - Google API key (free tier available)\n          - Internet connection\n          \n          ## ðŸ“š Documentation\n          \n          - [Installation Guide](https://yourusername.github.io/youtube-video-summarizer/installation/)\n          - [Troubleshooting](https://yourusername.github.io/youtube-video-summarizer/troubleshooting/)\n          - [Contributing Guidelines](CONTRIBUTING.md)\n          \n          ## ðŸ†“ Google Gemini Free Tier\n          \n          - 15 requests/minute\n          - 1,500 requests/day\n          - 1M tokens/month\n          \n          Perfect for personal use!\n        draft: false\n        prerelease: false\n\n    - name: Upload Release Asset (tar.gz)\n      uses: actions/upload-release-asset@v1\n      env:\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n      with:\n        upload_url: ${{ steps.create_release.outputs.upload_url }}\n        asset_path: ./dist/youtube-video-summarizer-${{ steps.latest_tag.outputs.tag }}.tar.gz\n        asset_name: youtube-video-summarizer-${{ steps.latest_tag.outputs.tag }}.tar.gz\n        asset_content_type: application/gzip\n\n    - name: Upload Release Asset (zip)\n      uses: actions/upload-release-asset@v1\n      env:\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n      with:\n        upload_url: ${{ steps.create_release.outputs.upload_url }}\n        asset_path: ./dist/youtube-video-summarizer-${{ steps.latest_tag.outputs.tag }}.zip\n        asset_name: youtube-video-summarizer-${{ steps.latest_tag.outputs.tag }}.zip\n        asset_content_type: application/zip\n\n  update-homebrew:\n    name: Update Homebrew Formula\n    runs-on: ubuntu-latest\n    needs: create-release\n    if: false  # Disable for now, enable when ready for Homebrew\n    steps:\n    - name: Update Homebrew formula\n      run: |\n        echo \"Homebrew formula update would go here\"\n        # This would update a Homebrew tap if we had one\n\n  notify-social:\n    name: Social Media Notification\n    runs-on: ubuntu-latest\n    needs: create-release\n    if: false  # Disable for now, enable when ready\n    steps:\n    - name: Post to social media\n      run: |\n        echo \"Social media notification would go here\"\n        # This could post to Twitter, Discord, etc.